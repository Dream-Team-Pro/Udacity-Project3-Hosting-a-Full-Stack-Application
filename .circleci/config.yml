version: 2.1
# this allows you to use CircleCI's dynamic configuration feature
setup: true
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build-and-deploy:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.13.2"
    steps:
      # install node and checkout code
      - node/install:
          node-version: '16.13.2'         
      - checkout
      - aws-cli/setup
      - eb/setup
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: npm run frontend:install
      # TODO: Install dependencies in the the backend API          
      - run:
          name: Install backend Dependencies
          command: npm run backend:install
      # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: npm run frontend:lint
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: npm run frontend:build
      # TODO: Build the backend API      
      - run:
          name: backend Build
          command: npm run backend:build
      # TODO: Start the frontend app
      - run:
          name: Front-End Build
          command: npm run frontend:start
      # TODO: Start the backend API      
      - run:
          name: backend Build
          command: npm run backend:start
      # TODO: Deploy the frontend app
      - run:
          name: Front-End Build
          command: npm run frontend:deploy
      # TODO: Deploy the backend API      
      - run:
          name: backend Build
          command: npm run backend:deploy
workflows:
  build-and-deploy:
    jobs:
      - build-and-deploy:
          context: aws
          filters:
            branches:
              only:
                - main      